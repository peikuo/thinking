name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Backend: Build and test
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install uv and dependencies
        run: |
          pip install uv
          uv venv .venv
          uv pip install -r backend/requirements.txt
      - name: Run backend tests
        run: |
          source .venv/bin/activate
          PYTHONPATH=$PYTHONPATH:$(pwd) pytest backend/tests --maxfail=1 --disable-warnings

      # Frontend: Build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build
      - name: Upload frontend build
        uses: actions/upload-pages-artifact@v3
        with:
          name: frontend-dist
          path: frontend/dist

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Get frontend build from previous job
      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
      - name: Extract frontend artifact
        run: |
          cd frontend/dist
          tar -xf artifact.tar
          rm artifact.tar

      # Prepare deployment packages
      - name: Package files for deployment
        run: |
          tar -czf backend.tar.gz backend
          tar -czf frontend.tar.gz frontend/dist

      # Deploy to server
      - name: Transfer files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "backend.tar.gz,frontend.tar.gz"
          target: "/home/thinking/thinking"
          overwrite: true
          
      # Deploy on server
      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Set up deployment directories
            cd /home/thinking
            mkdir -p deploy_new/backend deploy_new/frontend/dist
            
            # Extract files
            cd /home/thinking/thinking
            tar -xzf backend.tar.gz -C /home/thinking/deploy_new
            tar -xzf frontend.tar.gz -C /home/thinking/deploy_new
            rm backend.tar.gz frontend.tar.gz
            
            # Deploy files
            cp -r /home/thinking/deploy_new/backend/* /home/thinking/thinking/backend/ 2>/dev/null || true
            cp -r /home/thinking/deploy_new/frontend/dist/* /home/thinking/thinking/frontend/dist/ 2>/dev/null || true
            
            # Clean up
            rm -rf /home/thinking/deploy_new
            
            # Notify about manual restart needed
            echo "Deployment complete. Please restart services manually:"
            echo "  systemctl restart thinking-backend"
            echo "  systemctl reload nginx"
